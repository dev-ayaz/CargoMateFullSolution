@model CargoMate.Web.Admin.Areas.Administration.Models.Vehicle.VehicleCapacityViewModel
           @{
               Layout = null;
           }
@Html.HiddenFor(model=>model.Id)

<div class="form-group">
    @Html.LabelFor(model => model.VehicleTypeId, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        @Html.DropDownListFor(model => model.VehicleTypeId, new SelectList(Model.VehicleTypesListItems, "Value", "Text",@Model.VehicleTypeId), "Select Vehicle Type", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.VehicleTypeId, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.WeightUnitId, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        @Html.DropDownListFor(model => model.WeightUnitId, new SelectList(Model.WeightUnitsListItems, "Value", "Text", @Model.WeightUnitId), "Select Weight Unit", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.WeightUnitId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Breadth, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        @Html.EditorFor(model => model.Breadth, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Breadth, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.LengthUnitId, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        @Html.DropDownListFor(model => model.LengthUnitId, new SelectList(Model.LengthUnitsListItems, "Value", "Text", @Model.LengthUnitId), "Select Length Unit", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.LengthUnitId, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Length, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        @Html.EditorFor(model => model.Length, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Length, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.MaximumQuantity, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        @Html.EditorFor(model => model.MaximumQuantity, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.MaximumQuantity, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.UOMId, htmlAttributes: new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        @Html.DropDownListFor(model => model.UOMId, new SelectList(Model.UOMListItems, "Value", "Text", @Model.UOMId), "Select UOM", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.UOMId, "", new { @class = "text-danger" })
    </div>
</div>